{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pc/Documents/Projects/gameoflife/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nconst SIZE = 50;\n\nconst getNeighbours = (board, row, col) => {\n  let res = 0;\n\n  for (let i = Math.max(row - 1, 0); i <= Math.min(row + 1, board.length - 1); i++) {\n    for (let j = Math.max(col - 1, 0); j <= Math.min(col + 1, board.length - 1); j++) {\n      (i !== row || j !== col) && (res += board[i][j]);\n    }\n  }\n\n  return res;\n};\n\nconst populate = () => {\n  let res = new Array(SIZE).fill(0).map(() => new Array(SIZE).fill(0));\n  res[3][2] = 1;\n  res[3][3] = 1;\n  res[3][4] = 1;\n  res[2][4] = 1;\n  res[1][3] = 1;\n  return res;\n};\n\nexport default function App() {\n  _s();\n\n  const [board, setBoard] = useState(populate());\n  useEffect(() => {\n    let intervalId = setInterval(() => {\n      let temp = board.map(row => row.slice());\n\n      for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board.length; j++) {\n          const numNeighbours = getNeighbours(board, i, j);\n\n          if (board[i][j]) {\n            if (numNeighbours !== 2 && numNeighbours !== 3) {\n              // console.log(\"kill: \", i, j);\n              temp[i][j] = 0;\n            }\n          } else {\n            if (numNeighbours === 3) {\n              // console.log(\"spawn: \", i, j);\n              temp[i][j] = 1;\n            }\n          }\n        }\n      }\n\n      setBoard(temp);\n    }, 500);\n    return () => clearInterval(intervalId);\n  }, [board]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: board.map(row => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: row.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"10px\",\n            height: \"10px\",\n            background: !cell ? \"gray\" : \"green\",\n            border: \"1px solid black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wv0NQUYIw7WUhsdczsiaEpLcHIQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pc/Documents/Projects/gameoflife/src/App.js"],"names":["React","useState","useEffect","SIZE","getNeighbours","board","row","col","res","i","Math","max","min","length","j","populate","Array","fill","map","App","setBoard","intervalId","setInterval","temp","slice","numNeighbours","clearInterval","display","cell","index","width","height","background","border"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AAEA,MAAMC,IAAI,GAAG,EAAb;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,GAAR,EAAaC,GAAb,KAAqB;AACzC,MAAIC,GAAG,GAAG,CAAV;;AACA,OACE,IAAIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASL,GAAG,GAAG,CAAf,EAAkB,CAAlB,CADV,EAEEG,CAAC,IAAIC,IAAI,CAACE,GAAL,CAASN,GAAG,GAAG,CAAf,EAAkBD,KAAK,CAACQ,MAAN,GAAe,CAAjC,CAFP,EAGEJ,CAAC,EAHH,EAIE;AACA,SACE,IAAIK,CAAC,GAAGJ,IAAI,CAACC,GAAL,CAASJ,GAAG,GAAG,CAAf,EAAkB,CAAlB,CADV,EAEEO,CAAC,IAAIJ,IAAI,CAACE,GAAL,CAASL,GAAG,GAAG,CAAf,EAAkBF,KAAK,CAACQ,MAAN,GAAe,CAAjC,CAFP,EAGEC,CAAC,EAHH,EAIE;AACA,OAACL,CAAC,KAAKH,GAAN,IAAaQ,CAAC,KAAKP,GAApB,MAA6BC,GAAG,IAAIH,KAAK,CAACI,CAAD,CAAL,CAASK,CAAT,CAApC;AACD;AACF;;AACD,SAAON,GAAP;AACD,CAhBD;;AAkBA,MAAMO,QAAQ,GAAG,MAAM;AACrB,MAAIP,GAAG,GAAG,IAAIQ,KAAJ,CAAUb,IAAV,EAAgBc,IAAhB,CAAqB,CAArB,EAAwBC,GAAxB,CAA4B,MAAM,IAAIF,KAAJ,CAAUb,IAAV,EAAgBc,IAAhB,CAAqB,CAArB,CAAlC,CAAV;AACAT,EAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAY,CAAZ;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAY,CAAZ;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAY,CAAZ;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAY,CAAZ;AACAA,EAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,IAAY,CAAZ;AACA,SAAOA,GAAP;AACD,CARD;;AAUA,eAAe,SAASW,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACd,KAAD,EAAQe,QAAR,IAAoBnB,QAAQ,CAACc,QAAQ,EAAT,CAAlC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,UAAU,GAAGC,WAAW,CAAC,MAAM;AACjC,UAAIC,IAAI,GAAGlB,KAAK,CAACa,GAAN,CAAWZ,GAAD,IAASA,GAAG,CAACkB,KAAJ,EAAnB,CAAX;;AACA,WAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACQ,MAA1B,EAAkCJ,CAAC,EAAnC,EAAuC;AACrC,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAAK,CAACQ,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrC,gBAAMW,aAAa,GAAGrB,aAAa,CAACC,KAAD,EAAQI,CAAR,EAAWK,CAAX,CAAnC;;AACA,cAAIT,KAAK,CAACI,CAAD,CAAL,CAASK,CAAT,CAAJ,EAAiB;AACf,gBAAIW,aAAa,KAAK,CAAlB,IAAuBA,aAAa,KAAK,CAA7C,EAAgD;AAC9C;AACAF,cAAAA,IAAI,CAACd,CAAD,CAAJ,CAAQK,CAAR,IAAa,CAAb;AACD;AACF,WALD,MAKO;AACL,gBAAIW,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACAF,cAAAA,IAAI,CAACd,CAAD,CAAJ,CAAQK,CAAR,IAAa,CAAb;AACD;AACF;AACF;AACF;;AACDM,MAAAA,QAAQ,CAACG,IAAD,CAAR;AACD,KAnB2B,EAmBzB,GAnByB,CAA5B;AAoBA,WAAO,MAAMG,aAAa,CAACL,UAAD,CAA1B;AACD,GAtBQ,EAsBN,CAAChB,KAAD,CAtBM,CAAT;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGA,KAAK,CAACa,GAAN,CAAWZ,GAAD,IAAS;AAClB,0BACE;AAAK,QAAA,KAAK,EAAE;AAAEqB,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA,kBACGrB,GAAG,CAACY,GAAJ,CAAQ,CAACU,IAAD,EAAOC,KAAP,kBACP;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,MADF;AAELC,YAAAA,MAAM,EAAE,MAFH;AAGLC,YAAAA,UAAU,EAAE,CAACJ,IAAD,GAAQ,MAAR,GAAiB,OAHxB;AAILK,YAAAA,MAAM,EAAE;AAJH;AADT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAcD,KAfA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA/CuBd,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\nconst SIZE = 50;\n\nconst getNeighbours = (board, row, col) => {\n  let res = 0;\n  for (\n    let i = Math.max(row - 1, 0);\n    i <= Math.min(row + 1, board.length - 1);\n    i++\n  ) {\n    for (\n      let j = Math.max(col - 1, 0);\n      j <= Math.min(col + 1, board.length - 1);\n      j++\n    ) {\n      (i !== row || j !== col) && (res += board[i][j]);\n    }\n  }\n  return res;\n};\n\nconst populate = () => {\n  let res = new Array(SIZE).fill(0).map(() => new Array(SIZE).fill(0));\n  res[3][2] = 1;\n  res[3][3] = 1;\n  res[3][4] = 1;\n  res[2][4] = 1;\n  res[1][3] = 1;\n  return res;\n};\n\nexport default function App() {\n  const [board, setBoard] = useState(populate());\n\n  useEffect(() => {\n    let intervalId = setInterval(() => {\n      let temp = board.map((row) => row.slice());\n      for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board.length; j++) {\n          const numNeighbours = getNeighbours(board, i, j);\n          if (board[i][j]) {\n            if (numNeighbours !== 2 && numNeighbours !== 3) {\n              // console.log(\"kill: \", i, j);\n              temp[i][j] = 0;\n            }\n          } else {\n            if (numNeighbours === 3) {\n              // console.log(\"spawn: \", i, j);\n              temp[i][j] = 1;\n            }\n          }\n        }\n      }\n      setBoard(temp);\n    }, 500);\n    return () => clearInterval(intervalId);\n  }, [board]);\n\n  return (\n    <div className=\"App\">\n      {board.map((row) => {\n        return (\n          <div style={{ display: \"flex\" }}>\n            {row.map((cell, index) => (\n              <div\n                style={{\n                  width: \"10px\",\n                  height: \"10px\",\n                  background: !cell ? \"gray\" : \"green\",\n                  border: \"1px solid black\"\n                }}\n              ></div>\n            ))}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}